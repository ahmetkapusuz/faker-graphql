type Query {
  user: User
  users(count: Int): [User]
  address: Address
  blogPost: BlogPost
  blogPosts(count: Int): [BlogPost]
  todo: Todo
  todos(count: Int): [Todo]
  movie: Movie
  movies(count: Int): [Movie]
  product: Product
  products(count: Int): [Product]
  photo: Photo
  photos(count: Int): [Photo]
}

type User {
  id: ID
  firstName: String
  lastName: String
  email: String
  userName: String
  password: String
  avatar: String
}

type Address {
  streetName: String
  streetSuffix: String
  zipCode: String
  county: String
  state: String
  stateAbbr: String
  country: String
  countryCode: String
}

type BlogPost {
  id: ID
  title: String
  body: String
  author: String
  publishedAt: String
  thumbnailImageUrl: String
  imageUrl: String
}

type Todo {
  id: ID
  title: String
  completed: Boolean
}

type Movie {
  id: ID
  title: String
  overview: String
  posterUrl: String
  rating: Int
  genres: [String]
  cast: [String]
  directors: [String]
}

type Image {
  url: String
  alt: String
  width: Int
  height: Int
}

type Product {
  id: ID
  name: String
  description: String
  color: String
  price: String
  category: String
  images: [Image]
  publishedAt: String
}

type PhotoUrls {
  original: String
  thumbnail: String
  small: String
  medium: String
  large: String
}

type Photo {
  id: ID
  width: Int
  height: Int
  createdAt: String
  color: String
  description: String
  category: String
  urls: PhotoUrls
}
